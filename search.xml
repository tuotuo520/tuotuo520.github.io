<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>有戏问题解决方案.md</title>
    <url>/2020/03/25/%E6%9C%89%E6%88%8F%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h1 id="记录环境上-Canal-出现-CanalParseException-column-size-is-not-match-for-table-问题解决方案"><a href="#记录环境上-Canal-出现-CanalParseException-column-size-is-not-match-for-table-问题解决方案" class="headerlink" title="记录环境上 Canal 出现 CanalParseException: column size is not match for table 问题解决方案"></a>记录环境上 Canal 出现 CanalParseException: column size is not match for table 问题解决方案</h1><h2 id="问题起因"><a href="#问题起因" class="headerlink" title="问题起因"></a>问题起因</h2><h4 id="有戏的同学要在记录表增加一个字段，该表已经被-canal-监控起来。新增字段后程序发现接收不到-canal-发送的消息。"><a href="#有戏的同学要在记录表增加一个字段，该表已经被-canal-监控起来。新增字段后程序发现接收不到-canal-发送的消息。" class="headerlink" title="有戏的同学要在记录表增加一个字段，该表已经被 canal 监控起来。新增字段后程序发现接收不到 canal 发送的消息。"></a>有戏的同学要在记录表增加一个字段，该表已经被 canal 监控起来。新增字段后程序发现接收不到 canal 发送的消息。</h4><p>canal在处理表结构的DDL变更时采用了一种简单的策略，在内存里维护了一个当前数据库内表结构的镜像(通过desc table获取)。<br>这样的内存表结构镜像的维护存在问题，如果当前在处理的binlog为历史时间段T0，当前时间为T1，存在的一些异常分支情况：   </p>
<ul>
<li>假如在T0~T1的时间内，表结构A发生过增加列的DDL操作，那在处理T0时间段A表的binlog时，拿到的表结构为T1的镜像，就会出现列不匹配的情况. 比如之前的异常: column size is not match for table: xx , 12 vs 13</li>
<li>假如在T0~T1发生了增加 C1列、删除了C2列，此时拿到的列的总数还是和T0时保持一致，但是对应的列会错位</li>
<li>假如在T0~T1发生了drop table的DDL，此时拿表结构时会出现无法找到表的异常，一直阻塞整个binlog处理，比如not found [xx] in db</li>
</ul>
<hr>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol>
<li>打开 conf/canal.properties，选择持久化存储的方案，默认为H2，更改为 Mysql</li>
</ol>
<p>   canal.instance.tsdb.spring.xml=classpath:spring/tsdb/h2-tsdb.xml<br>   #canal.instance.tsdb.spring.xml=classpath:spring/tsdb/mysql-tsdb.xml</p>
<ol start="2">
<li>打开 instance 下的 instance.properties ，修改对应的参数</li>
</ol>
<table>
<thead>
<tr>
<th>参数名</th>
<th>默认值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>canal.instance.tsdb.enable</td>
<td>true</td>
<td>是否开启时序表结构的能力</td>
</tr>
<tr>
<td>canal.instance.tsdb.dir</td>
<td>${canal.file.data.dir:../conf}/${canal.instance.destination:}</td>
<td>默认存储到conf/$instance</td>
</tr>
<tr>
<td>canal.instance.tsdb.url</td>
<td>jdbc:h2:${canal.instance.tsdb.dir}/h2;CACHE_SIZE=1000;MODE=MYSQL;</td>
<td>jdbc链接串</td>
</tr>
<tr>
<td>canal.instance.tsdb.dbUsername</td>
<td>canal</td>
<td>jdbc用户名，因为有自动创建表的能力，所以对该用户需要有create table的权限</td>
</tr>
<tr>
<td>canal.instance.tsdb.dbPassword</td>
<td>canal</td>
<td>jdbc密码</td>
</tr>
</tbody></table>
<p> For Example :  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\# table meta tsdb info  </span><br><span class="line"></span><br><span class="line">canal.instance.tsdb.enable&#x3D;true  </span><br><span class="line"></span><br><span class="line">canal.instance.tsdb.dir&#x3D;$&#123;canal.file.data.dir:..&#x2F;conf&#125;&#x2F;$&#123;canal.instance.destination:&#125;  </span><br><span class="line"> </span><br><span class="line">canal.instance.tsdb.url&#x3D;jdbc:h2:$&#123;canal.instance.tsdb.dir&#125;&#x2F;h2;CACHE_SIZE&#x3D;1000;MODE&#x3D;MYSQL;  </span><br><span class="line"></span><br><span class="line">\#canal.instance.tsdb.url&#x3D;jdbc:mysql:&#x2F;&#x2F;127.0.0.1:3306&#x2F;canal_tsdb  </span><br><span class="line"></span><br><span class="line">canal.instance.tsdb.dbUsername&#x3D;canal  </span><br><span class="line"></span><br><span class="line">canal.instance.tsdb.dbPassword&#x3D;canal</span><br></pre></td></tr></table></figure>

<p>重启mysql，看到数据库中已经生成对应表镜像，解决问题。</p>
<p><img src="https://i.loli.net/2020/03/25/Zjki9MHTC3Gw2Wp.png" alt="image.png"></p>
]]></content>
      <categories>
        <category>线上问题解决思路</category>
        <category>Canal</category>
      </categories>
      <tags>
        <tag>Canal</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql8.0 Windows 安装教程</title>
    <url>/2020/03/18/Mysql8-0-Windows-%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>#Mysql 8.0 安装教程</p>
<p>##下载</p>
<h3 id="mysql官方下载地址"><a href="#mysql官方下载地址" class="headerlink" title="mysql官方下载地址"></a><a href="'https://dev.mysql.com/downloads/mysql/'">mysql官方下载地址</a></h3><h3 id="国内镜像地址-souhu"><a href="#国内镜像地址-souhu" class="headerlink" title="国内镜像地址(souhu)"></a><a href="'http://mirrors.sohu.com/mysql/MySQL-8.0/'">国内镜像地址(souhu)</a></h3><p>##安装</p>
<p>下载完成后解压到任意目录</p>
<p><img src="https://upload-images.jianshu.io/upload_images/19257537-d51e9c33e4b791b7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql安装目录.png"></p>
<p>打开系统环境变量，新建 <code>MYSQL_HOME</code><br><img src="https://upload-images.jianshu.io/upload_images/19257537-4207eea24c8a0107.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql_home.png"><br>添加<code>Path</code><br><img src="https://upload-images.jianshu.io/upload_images/19257537-cb9c9bf2303cb6cd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="mysql_home.png"></p>
<p>###配置<br>打开mysql安装目录，添加<code>mysql.ini</code>文件并且编辑,粘贴如下代码</p>
<pre><code>[client]
# 设置mysql客户端默认字符集
default-character-set=utf8

[mysqld]
# 设置3306端口
port = 3306
# 设置mysql的安装目录
basedir=D:\\setup\\dev\\mysql
# 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错
# datadir=D:\\Program Files\\sqldata
# 允许最大连接数
max_connections=20
# 服务端使用的字符集默认为8比特编码的latin1字符集
character-set-server=utf8
# 创建新表时将使用的默认存储引擎
default-storage-engine=INNODB</code></pre><p>###启动</p>
<p>在安装目录下执行cmd命令（<strong><font color="Red">以管理员方式运行</font></strong>）</p>
<p>####初始化数据库<br>执行如下命令</p>
<p><code>mysqld --initialize --console</code></p>
<p>控制台输出</p>
<pre><code>2020-03-18T00:59:19.792092Z 0 [System] [MY-013169] [Server] D:\setup\dev\mysql\bin\mysqld.exe (mysqld 8.0.19) initializing of server in progress as process 5452
2020-03-18T00:59:19.793714Z 0 [Warning] [MY-013242] [Server] --character-set-server: &apos;utf8&apos; is currently an alias for the character set UTF8MB3, but will be an alias for UTF8MB4 in a future release. Please consider using UTF8MB4 in order to be unambiguous.
2020-03-18T00:59:23.210194Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: 1d.GL2_u&amp;h==</code></pre><p>初始密码就是末尾的 <code>1d.GL2_u&amp;h==</code> ，后续登录需要用到，你也可以在登陆后修改密码。</p>
<p>键入安装命令：</p>
<p><code>mysqld install</code></p>
<p>启动输入以下命令：</p>
<p><code>net start mysql</code></p>
<pre><code>PS D:\setup\dev\mysql&gt; mysqld install
Service successfully installed.
PS D:\setup\dev\mysql&gt; net start mysql
MySQL 服务正在启动 .
MySQL 服务已经启动成功。</code></pre><p>##登录</p>
<p>控制台执行<code>mysql  -uroot -p</code>,键入刚刚保存的随机密码登录mysql。<br>修改密码</p>
<pre><code>mysql&gt; use mysql
ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.
mysql&gt; alter user user() identified by &apos;123456&apos;
-&gt; ;
Query OK, 0 rows affected (0.02 sec)

mysql&gt; show databases;
+--------------------+
| Database   |
+--------------------+
| information_schema |
| mysql  |
| performance_schema |
| sys|
+--------------------+
4 rows in set (0.01 sec)

mysql&gt; use mysql;
Database changed
mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; identified with mysql_native_password by &apos;123456&apos;
-&gt; ;
Query OK, 0 rows affected (0.01 sec)

mysql&gt; flush privileges;
Query OK, 0 rows affected (0.01 sec)</code></pre><p>####至此已安装完毕，可以用远程客户端如 Navicat 连接啦！</p>
]]></content>
      <categories>
        <category>安装教程</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>孙逸宸出生啦</title>
    <url>/2020/03/05/%E5%AD%99%E9%80%B8%E5%AE%B8%E5%87%BA%E7%94%9F%E5%95%A6/</url>
    <content><![CDATA[<h1 id="孙逸宸诞生啦"><a href="#孙逸宸诞生啦" class="headerlink" title="孙逸宸诞生啦"></a>孙逸宸诞生啦</h1><p>2020.01.02，小家伙终于调皮的从妈妈的肚子了出来了，因为活泼好动害的他妈妈肚子上挨了一刀。<br>到现在为止已经63天啦，每天都想赶快下班回家，等不及想要见到他。</p>
<p><img src="/images/16-48-09.jpg" alt="老父親般微笑"></p>
<p>抬头属实抬得不错</p>
<p><img src="/images/16-49-16.jpg" alt="抬頭"></p>
<p><img src="/images/16-49-23.jpg" alt="抬頭"></p>
<p><img src="/images/16-49-30.jpg" alt="抬頭"><br>由于疫情原因明天才能和老婆带他到医院检查，但愿一切平安无事。</p>
]]></content>
      <categories>
        <category>生活</category>
        <category>寶寶</category>
      </categories>
      <tags>
        <tag>Baby</tag>
      </tags>
  </entry>
</search>
